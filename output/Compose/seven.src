
object Node extend visual
{
	visual list;

	Node(visual parent, string dir, int depth)
	{
		this.buildFolder(parent, dir, depth);
	}
	
	func buildFolder(visual parent, string dir, int depth)
	{
		int margin1 = depth * 20;
		int margin2 = margin1 + 20;
		string[] folderArr = Directory.GetDirectories(dir);
		string folder;
		for(int i=0; i<folderArr.Length; i++){
			folder = folderArr[i].Substring(dir.Length+1);
			parent.add(<block marginLeft=margin2><image source="folder.png" marginRight=10 height=20/>.folder<br/></block>);
			new Node(parent, dir+"/"+folder, depth+1);
		}

		string[] fileArr = Directory.GetFiles(dir);
		string file;
		for(int i=0; i<fileArr.Length; i++){
			file = fileArr[i].Substring(dir.Length+1);
			parent.add(<block marginLeft=margin2><image source="file.png" marginRight=10 height=20/>.file<br/></block>);
		}
	}

	func Toggle(InputEvent inevt)
	{
		bool toogleList = (inevt.Button.LeftClick);
		if(list != null && toogleList){
			list.display = !list.display;
		}
	}
}

object Test extend visual
{
	Test()
	{
		visual root = <block/>;
		new Node(root, ".", 0);
		visual cnt = <scroll width=150 height=300/>;
		cnt.Nodes[0].add(root);
		this.content = cnt;
	}
}